/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 18 16:10:59 GMT 2020
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Parser;
import Model.UMCarroJa;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Parser parser0 = null;
      try {
        parser0 = new Parser((String) null, uMCarroJa0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Parser parser0 = new Parser();
      UMCarroJa uMCarroJa0 = new UMCarroJa();
      Parser parser1 = new Parser("2oq)X", uMCarroJa0);
      // Undeclared exception!
      try { 
        parser1.equals(parser0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Parser parser0 = new Parser();
      boolean boolean0 = parser0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Parser parser0 = new Parser();
      boolean boolean0 = parser0.equals(parser0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Parser parser0 = new Parser();
      Object object0 = new Object();
      boolean boolean0 = parser0.equals(object0);
      assertFalse(boolean0);
  }
}
