/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 18 19:40:45 GMT 2020
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CarroGasolina_ESTest extends CarroGasolina_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(1491.50209901, 1054.92333);
      LinkedList<ParDatas> linkedList0 = new LinkedList<ParDatas>();
      CarroGasolina carroGasolina0 = new CarroGasolina("", "", "", 1873, 0.0, (-1.0), 0, coordinate0, false, 1873, linkedList0);
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertNotSame(carroGasolina1, carroGasolina0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 1.0);
      CarroGasolina carroGasolina0 = new CarroGasolina();
      List<ParDatas> list0 = carroGasolina0.getDatasAlugueres();
      LinkedList<ParDatas> linkedList0 = new LinkedList<ParDatas>(list0);
      CarroGasolina carroGasolina1 = new CarroGasolina("z", "", "z", 0, (-986.0), 0.0, 0, coordinate0, true, (-1), linkedList0);
      CarroGasolina carroGasolina2 = carroGasolina1.clone();
      assertEquals((-1), carroGasolina2.getClassificacao());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.05, (-657));
      LinkedList<ParDatas> linkedList0 = new LinkedList<ParDatas>();
      CarroGasolina carroGasolina0 = new CarroGasolina("azvA<?=%", "azvA<?=%", "", (-657), 0.05, 0.05, 3106, coordinate0, true, 0, linkedList0);
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertEquals("azvA<?=%", carroGasolina1.getMatricula());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      carroGasolina0.setAutonomia((-1318));
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      assertFalse(carroGasolina1.getDisponibilidade());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      carroGasolina0.setPosicao((Coordinate) null);
      // Undeclared exception!
      try { 
        carroGasolina0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<ParDatas> linkedList0 = new LinkedList<ParDatas>();
      linkedList0.offerLast((ParDatas) null);
      CarroGasolina carroGasolina0 = null;
      try {
        carroGasolina0 = new CarroGasolina("NMqXyXy", "O-Den", "[LRRK}$N", 0, 2575.55809846, (-3258.103344), 1468, (Coordinate) null, false, 0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$3$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CarroGasolina carroGasolina0 = null;
      try {
        carroGasolina0 = new CarroGasolina((CarroGasolina) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      CarroGasolina carroGasolina1 = new CarroGasolina(carroGasolina0);
      assertEquals(0, carroGasolina1.getVelocidade());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      CarroGasolina carroGasolina1 = new CarroGasolina();
      boolean boolean0 = carroGasolina0.equals(carroGasolina1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      boolean boolean0 = carroGasolina0.equals(carroGasolina0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      boolean boolean0 = carroGasolina0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(8245, 8245);
      LinkedList<ParDatas> linkedList0 = new LinkedList<ParDatas>();
      CarroGasolina carroGasolina0 = new CarroGasolina("com.google.gson.FieldNamingPolicy", "com.google.gson.FieldNamingPolicy", "com.google.gson.FieldNamingPolicy", 8245, 8245, 8245, 8245, coordinate0, false, 8245, linkedList0);
      Object object0 = new Object();
      boolean boolean0 = carroGasolina0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      String string0 = carroGasolina0.toString();
      assertEquals("***** Carro a Gasolina *****\n*****    VE\u00CDCULO    *****\nMarca: \nMatr\u00EDcula: \nNIF do Propriet\u00E1rio: \nVelocidade M\u00E9dia: 0\nPre\u00E7o Base por Km: 0.0\nConsumo: 0.0\nAutonomia: 0\nPosi\u00E7\u00E3o (latitude e longitude): 0, 0\nDispon\u00EDvel: false\nClassifica\u00E7\u00E3o: 0\n", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CarroGasolina carroGasolina0 = new CarroGasolina();
      CarroGasolina carroGasolina1 = carroGasolina0.clone();
      carroGasolina1.setMarca((String) null);
      // Undeclared exception!
      try { 
        carroGasolina1.equals(carroGasolina0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Veiculo", e);
      }
  }
}
