/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 18 19:39:17 GMT 2020
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Coordinate_ESTest extends Coordinate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      Coordinate coordinate1 = new Coordinate(0.0, 480.2722264874395);
      int int0 = coordinate0.compareTo(coordinate1);
      assertEquals(0.0, coordinate1.getLatitude(), 0.01);
      assertEquals(480.2722264874395, coordinate1.getLongitude(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      double double0 = coordinate0.getLongitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, coordinate0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 682.67);
      double double0 = coordinate0.getLongitude();
      assertEquals(0.0, coordinate0.getLatitude(), 0.01);
      assertEquals(682.67, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(767.381817943984, 1.0);
      double double0 = coordinate0.getLatitude();
      assertEquals(767.381817943984, double0, 0.01);
      assertEquals(1.0, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      coordinate0.setLatitude((-1.0));
      double double0 = coordinate0.getLatitude();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(2362.8184455374, 0.0);
      Coordinate coordinate1 = new Coordinate(711.102269431129, 711.102269431129);
      double double0 = coordinate1.getDistancia(coordinate0);
      assertEquals(711.102269431129, coordinate1.getLongitude(), 0.01);
      assertEquals(1490.8051142993233, double0, 0.01);
      assertEquals(711.102269431129, coordinate1.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(711.102269431129, 711.102269431129);
      Coordinate coordinate1 = coordinate0.clone();
      assertEquals(711.102269431129, coordinate1.getLatitude(), 0.01);
      assertTrue(coordinate1.equals((Object)coordinate0));
      assertEquals(711.102269431129, coordinate1.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(2362.8184455374, 0.0);
      Coordinate coordinate1 = coordinate0.clone();
      assertEquals(2362.8184455374, coordinate1.getLatitude(), 0.01);
      assertTrue(coordinate1.equals((Object)coordinate0));
      assertEquals(0.0, coordinate1.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-656.32688), (-656.32688));
      Coordinate coordinate1 = coordinate0.clone();
      assertTrue(coordinate1.equals((Object)coordinate0));
      assertEquals((-656.32688), coordinate0.getLongitude(), 0.01);
      assertEquals((-656.32688), coordinate1.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      // Undeclared exception!
      try { 
        coordinate0.getDistancia((Coordinate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(1000.0, 1000.0);
      // Undeclared exception!
      try { 
        coordinate0.compareTo((Coordinate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Coordinate coordinate0 = null;
      try {
        coordinate0 = new Coordinate((Coordinate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-321.18), (-321.18));
      double double0 = coordinate0.getLongitude();
      assertEquals((-321.18), double0, 0.01);
      assertEquals((-321.18), coordinate0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      Coordinate coordinate1 = new Coordinate(coordinate0);
      boolean boolean0 = coordinate1.equals(coordinate0);
      assertTrue(boolean0);
      assertEquals(0.0, coordinate1.getLatitude(), 0.01);
      assertEquals(0.0, coordinate1.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      double double0 = coordinate0.getDistancia(coordinate0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, coordinate0.getLatitude(), 0.01);
      assertEquals(0.0, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      double double0 = coordinate0.getLatitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-13.654308149693243), (-13.654308149693243));
      boolean boolean0 = coordinate0.equals("-13.654308, -13.654308");
      assertEquals((-13.654308149693243), coordinate0.getLatitude(), 0.01);
      assertEquals((-13.654308149693243), coordinate0.getLongitude(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(2362.8184455374, 0.0);
      Coordinate coordinate1 = new Coordinate(711.102269431129, 711.102269431129);
      int int0 = coordinate0.compareTo(coordinate1);
      assertEquals(711.102269431129, coordinate1.getLongitude(), 0.01);
      assertEquals(711.102269431129, coordinate1.getLatitude(), 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-13.654308149693243), (-13.654308149693243));
      coordinate0.setLongitude(180.0);
      assertEquals(180.0, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(848.384507578, 848.384507578);
      // Undeclared exception!
      try { 
        coordinate0.setLongitude(848.384507578);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The parameter did not pass validation as defined by the CoordinateManager class
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(3027.016716077, 3027.016716077);
      // Undeclared exception!
      try { 
        coordinate0.setLatitude((-3978.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The parameter did not pass validation as defined by the CoordinateManager class
         //
         verifyException("Coordinate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      String string0 = coordinate0.toString();
      assertEquals("0, 0", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      coordinate0.clone();
      assertEquals(0.0, coordinate0.getLatitude(), 0.01);
      assertEquals(0.0, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      String string0 = coordinate0.getLongitudeAsString();
      assertEquals("0", string0);
      assertEquals(0.0, coordinate0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate(0.0, 0.0);
      String string0 = coordinate0.getLatitudeAsString();
      assertEquals("0", string0);
      assertEquals(0.0, coordinate0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Coordinate coordinate0 = new Coordinate((-13.654308149693243), (-13.654308149693243));
      int int0 = coordinate0.compareTo(coordinate0);
      assertEquals((-13.654308149693243), coordinate0.getLatitude(), 0.01);
      assertEquals((-13.654308149693243), coordinate0.getLongitude(), 0.01);
      assertEquals(0, int0);
  }
}
